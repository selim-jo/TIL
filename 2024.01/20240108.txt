# Spr시ing Security 개념
- Spring 기반의 어플리케이션의 보안(인증과 권한, 인가 등)을 담당하는 스프링 하위 프레임워크를 뜻함
- 보안과 관련해서 체계적으로 많은 옵션을 제공해주기 때문에, 개발자 입장에서 일일이 보안 관련 로직을 작성하지 않아도 되는 장점이 있음
- Spring Security는 인증과 권한에 대한 부분을 Filter 흐름에 따라 처리하고 있음

cf) Client(request) -> Filter -> DispatcherServlet -> Interceptor -> Controller

# Sprint Security 구조의 처리과정
1) 사용자가 로그인 정보와 함께 인증 요청을 함 (Http Request)
2) AuthenticationFilter가 요청을 가로채고, 가로챈 정보를 통해 UsernamePasswordAuthenticationToken의 인증용 객체를 생성함
3) AuthenticationManager의 구현체인 ProviderManager에게 생성한 UsernamePasswordToken 객체를 전달함
4) AuthenticationManager는 등록된 AuthenticationProvider들을 조회하여 인증을 요구함
5) 실제 DB에서 사용자 인증정보를 가져오는 UserDetailsService에 사용자 정보를 넘겨줌
6) 넘겨받은 사용자 정보를 통해 DB에서 찾은 사용자 정보인 UserDetails 객체를 만듦
7) AuthenticationProvider들은 UserDetails를 넘겨받고 사용자 정보를 비교함
8) 인증이 완료되면 권한 등의 사용자 정보를 담은 Authentication 객체를 반환함
9) 다시 최초의 AuthenticationFilter에 Authentication 객체가 반환됨
10) Authentication 객체를 SecurityContext에 저장함

최종적으로 SecurityContextHolder는 세션 영역에 있는 SecurityContext에 Authentication 객체를 저장함
사용자 정보를 저장한다는 것은 Spring Security가 전통적인 세션-쿠키 기반의 인증 방식을 사용한다는 것을 의미함
