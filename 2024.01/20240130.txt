# ObjectMapper
- JSON 형식을 사용할 때, 응답들을 직렬화하고 요청들을 역직렬화할 때 사용하는 기술
- 여기서 직렬화란, Object -> String 문자열
      역직렬화란, String 문자열 -> Object
- ObjectMapper 사용법
// Object -> String (직렬화)
ex) ObjectMapper objectMapper = new ObjectMapper();
    Drink drink = new Drink("C", "콜라");
    objectMapper.WriteValueAsString(drink); // {"sign": "C", "name": "콜라"}

// String -> Object (역직렬화)
ex) Drink drinkObject = objectMapper.readValue(text, Drink.class); // Drink{sign='C', name='콜라'}

# 오라클 계층형 쿼리
- 계층형 쿼리란?
: 테이블에 계층형 구조가 존재할 때, 이를 조회하기 위한 쿼리
- 계층형 쿼리에서 사용하는 구문
1) START WITH
-> 계층의 루트로 사용될 행 지정
-> 어떤 레코드를 최상위 레코드로 정할지 결정
 ex) SELECT *
       FROM TB_EMP
       START WITH 부서번호 IS NULL;

2) CONNECT BY
-> 연결고리를 만듦
-> PRIOR 연산자로 계층구조를 표현할 수 있음
ex) CONNECT BY PRIOR 부서번호 = 상위 부서번호
    (회사 데이터의 부서번호가 상위 부서번호와 일치하는 데이터 가져오기)
cf) CONNECT BY PRIOR 상위 부서번호 = 부서번호 (x)
    (이럴 경우 회사 데이터의 상위 부서번호가 NULL 값이고, NULL 값을 부서번호로 갖는 데이터 없기 때문에 출력x)

3) LEVEL
- 계층 구조 쿼리에서 수행 결과의 Depth를 표현하는 컬럼
- 현재 행이 계층의 몇번째 레벨인지 표시해주는 값이며, 계층형 쿼리에서만 존재하는 모조 컬럼임